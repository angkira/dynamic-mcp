services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "3000:3000"
    volumes:
      # Volume mounts for development hot reload
      - ./server/src:/app/server/src
      - ./shared/src:/app/shared/src
      - ./prisma:/app/prisma
      # Avoid overwriting node_modules and generated Prisma client
      - /app/node_modules
      - /app/server/node_modules
    command: npm run dev

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        - VITE_API_URL=${VUE_API_URL}
    env_file:
      - .env
    depends_on:
      - server
    ports:
      - "5173:5173"
    volumes:
      # Volume mounts for development hot reload
      - ./client/src:/app/client/src
      - ./client/public:/app/client/public
      - ./shared/src:/app/shared/src
      # Avoid overwriting node_modules
      - /app/node_modules
      - /app/client/node_modules
    command: npm run dev

volumes:
  db-data:
