services:
  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main server application
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile.prod
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"

  # Separate MCP servers as independent services
  mcp-memory:
    build:
      context: .
      dockerfile: ./server/Dockerfile.prod
    env_file:
      - .env
    environment:
      - MCP_SERVER=memory
    depends_on:
      db:
        condition: service_healthy
    command: ["node", "server/dist/mcp-servers/memory-server.js"]

  mcp-api:
    build:
      context: .
      dockerfile: ./server/Dockerfile.prod
    env_file:
      - .env
    environment:
      - MCP_SERVER=api
    depends_on:
      db:
        condition: service_healthy
    command: ["node", "server/dist/mcp-servers/dynamic-mcp-api-server.js"]

  # Frontend client
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile.prod
      args:
        - VITE_API_URL=${VUE_API_URL}
    env_file:
      - .env
    depends_on:
      - server
    ports:
      - "80:80"

volumes:
  db-data:
