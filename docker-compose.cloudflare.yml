services:
  # Lightweight PostgreSQL for Cloudflare
  db:
    build:
      context: ./docker/db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      # Cloudflare-optimized settings
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  # Main server - Cloudflare optimized
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile.cloudflare
      # Cloudflare build optimizations
      cache_from:
        - dynamic-mcp-server:cloudflare
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health" ]
      interval: 15s
      timeout: 10s
      retries: 2
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Simplified MCP servers for Cloudflare constraints
  mcp-memory:
    build:
      context: .
      dockerfile: ./server/Dockerfile.cloudflare
      cache_from:
        - dynamic-mcp-server:cloudflare
    env_file:
      - .env
    environment:
      - MCP_SERVER=memory
    depends_on:
      db:
        condition: service_healthy
    command: [ "sh", "-c", "cd /app && node dist/mcp-servers/memory-server.js" ]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  mcp-api:
    build:
      context: .
      dockerfile: ./server/Dockerfile.cloudflare
      cache_from:
        - dynamic-mcp-server:cloudflare
    env_file:
      - .env
    environment:
      - MCP_SERVER=api
    depends_on:
      db:
        condition: service_healthy
    command: [ "sh", "-c", "cd /app && node dist/mcp-servers/dynamic-mcp-api-server.js" ]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # Frontend - Cloudflare optimized
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile.cloudflare
      cache_from:
        - dynamic-mcp-client:cloudflare
      args:
        - VITE_API_URL=/api
        - VITE_SOCKET_URL=/socket.io
    environment:
      - BACKEND_HOST=${BACKEND_HOST:-server}
      - BACKEND_PORT=${BACKEND_PORT:-3000}
    env_file:
      - .env
    depends_on:
      - server
    ports:
      - "80:80"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80" ]
      interval: 15s
      timeout: 5s
      retries: 2
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

volumes:
  db-data:
