# Clean production Dockerfile for server
FROM node:22-alpine AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY server/package.json ./server/
COPY shared/package.json ./shared/
COPY packages/typescript-config/package.json ./packages/typescript-config/

# Install dependencies
RUN npm ci --only=production

# Build stage
FROM node:22-alpine AS builder
WORKDIR /app

# Copy package files and source
COPY package*.json ./
COPY server/ ./server/
COPY shared/ ./shared/
COPY packages/ ./packages/
COPY prisma/ ./prisma/

# Install all dependencies
RUN npm ci

# Build shared first, then server
RUN cd shared && npm run build
RUN cd server && npm run build:all

# Generate Prisma client
RUN npx prisma generate

# Production runtime
FROM node:22-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

# Copy only what's needed for runtime
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package*.json ./
COPY --from=builder /app/server/dist ./server/dist
COPY --from=builder /app/shared/dist ./shared/dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma

# Make MCP servers executable
RUN chmod +x ./server/dist/mcp-servers/*.js

EXPOSE 3000
CMD ["node", "server/dist/app.js"]
