# Optimized production Dockerfile for client
FROM node:22-alpine AS base
WORKDIR /app

# Dependencies stage - cache layer for faster rebuilds
FROM base AS deps
# Copy package files first (better caching)
COPY package*.json ./
COPY client/package.json ./client/
COPY shared/package.json ./shared/
COPY packages/typescript-config/package.json ./packages/typescript-config/

# Install dependencies with memory optimizations
RUN --mount=type=cache,target=/root/.npm \
    npm ci --prefer-offline --no-audit --no-fund --maxsockets=15 --fetch-timeout=300000 && \
    npm cache clean --force

# Build stage
FROM base AS builder
ARG VITE_API_URL
ARG VITE_SOCKET_URL
ARG NODE_ENV=production

ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_SOCKET_URL=${VITE_SOCKET_URL}
ENV NODE_ENV=${NODE_ENV}

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package*.json ./

# Copy source code
COPY client/ ./client/
COPY shared/ ./shared/
COPY packages/ ./packages/

# Build with optimizations
RUN cd shared && npm run build && \
    cd ../client && npm run build

# Production runtime with nginx
FROM nginx:alpine AS runner
RUN addgroup -g 1001 -S nginx-user
RUN adduser -S nginx-user -u 1001

# Create necessary directories with proper permissions
RUN mkdir -p /var/cache/nginx/client_temp \
    /var/cache/nginx/proxy_temp \
    /var/cache/nginx/fastcgi_temp \
    /var/cache/nginx/uwsgi_temp \
    /var/cache/nginx/scgi_temp \
    /var/run/nginx \
    /tmp/nginx && \
    chown -R nginx-user:nginx-user /var/cache/nginx /var/run/nginx /etc/nginx/conf.d /tmp/nginx

# Copy built app
COPY --from=builder /app/client/dist /usr/share/nginx/html

# Copy nginx configuration template
COPY client/nginx.conf.template /etc/nginx/templates/default.conf.template

# Set default values for environment variables
ENV BACKEND_HOST=server
ENV BACKEND_PORT=3000

# Configure nginx for non-root execution  
RUN cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak && \
    sed -e '/^user /d' -e 's|pid.*nginx\.pid;|pid /tmp/nginx.pid;|' /etc/nginx/nginx.conf.bak > /etc/nginx/nginx.conf && \
    echo "Modified nginx.conf:" && cat /etc/nginx/nginx.conf

# Set proper permissions for web content
RUN chown -R nginx-user:nginx-user /usr/share/nginx/html

EXPOSE 80
USER nginx-user
CMD ["nginx", "-g", "daemon off;"]
