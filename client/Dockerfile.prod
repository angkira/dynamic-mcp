# Multi-stage build for production client
FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy dependency files
COPY package*.json ./
COPY shared/package.json ./shared/package.json
COPY client/package.json ./client/package.json

# Install dependencies
RUN npm ci --only=production

# Build stage
FROM base AS builder
WORKDIR /app

# Accept build arguments
ARG VITE_API_URL
ARG NODE_ENV=production

# Set environment variables for Vite
ENV VITE_API_URL=${VITE_API_URL}
ENV NODE_ENV=${NODE_ENV}

# Copy dependency files
COPY package*.json ./
COPY shared/ ./shared/
COPY client/package.json ./client/package.json
COPY client/src/ ./client/src/
COPY client/public/ ./client/public/
COPY client/index.html ./client/index.html
COPY client/vite.config.ts ./client/vite.config.ts
COPY client/tsconfig*.json ./client/

# Install all dependencies (including dev)
RUN npm ci

# Build shared package first
WORKDIR /app/shared
RUN npm run build

# Build client
WORKDIR /app/client
RUN npm run build

RUN npm run build

# Stage 2: serve via nginx
FROM nginx:alpine

# Copy custom nginx config if needed
# COPY nginx.conf /etc/nginx/nginx.conf

COPY --from=build /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
